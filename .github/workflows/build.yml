name: Build Xiaomi Pad 6 Kernel

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: pipa-mainline/linux
        ref: vipaoL/dev
        path: kernel-src

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev bc ccache python3 python3-pip wget git

    - name: Download Proton Clang Toolchain
      run: |
        # Menggunakan Proton Clang yang lebih stabil
        git clone --depth=1 https://github.com/kdrag0n/proton-clang.git proton-clang

    - name: Verify Toolchain
      run: |
        ls -la proton-clang/bin/clang
        proton-clang/bin/clang --version || true

    - name: Build Configuration
      run: |
        cd kernel-src
        make ARCH=arm64 O=out vendor/pipa_defconfig

    - name: Build Kernel
      run: |
        cd kernel-src
        make -j$(($(nproc) - 1)) ARCH=arm64 O=out \
          CC="$GITHUB_WORKSPACE/proton-clang/bin/clang" \
          LD="$GITHUB_WORKSPACE/proton-clang/bin/ld.lld" \
          AR="$GITHUB_WORKSPACE/proton-clang/bin/llvm-ar" \
          NM="$GITHUB_WORKSPACE/proton-clang/bin/llvm-nm" \
          OBJCOPY="$GITHUB_WORKSPACE/proton-clang/bin/llvm-objcopy" \
          OBJDUMP="$GITHUB_WORKSPACE/proton-clang/bin/llvm-objdump" \
          STRIP="$GITHUB_WORKSPACE/proton-clang/bin/llvm-strip" \
          CROSS_COMPILE="$GITHUB_WORKSPACE/proton-clang/bin/aarch64-linux-gnu-" \
          CROSS_COMPILE_ARM32="$GITHUB_WORKSPACE/proton-clang/bin/arm-linux-gnueabi-" \
          LLVM=1 LLVM_IAS=1

    - name: Verify Build Output
      run: |
        ls -la kernel-src/out/arch/arm64/boot/ || true
        [ -f kernel-src/out/arch/arm64/boot/Image ] && echo "✅ Kernel build successful!" || echo "❌ Kernel file not found!"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-artifacts
        path: |
          kernel-src/out/arch/arm64/boot/Image
          kernel-src/out/vmlinux
